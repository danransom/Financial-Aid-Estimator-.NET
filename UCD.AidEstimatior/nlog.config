<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="c:\nlog\internal-nlog.txt">

	<!-- Load the ASP.NET Core plugin -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<variable name="appName" value="FAS" />
	<variable name="logDirectory" value="${basdir-drive-letter}:\nlog\${appName}" />
	
	<!-- the targets to write to -->
	<targets>
		
		<default-wrapper xsi:type="AsyncWrapper" timeToSleepBetweenBatches="0" overflowAction="Block" />

		<!-- write logs to file -->
		<target xsi:type="File" name="allfile" fileName="${logDirectory}\nlog-${shortdate}.log"
						header="Date Time|Level|Username|Request IP|Request Method|URL|QueryString|UserAgent|Referrer|message|traceidentifier"
						layout="${longdate}|${uppercase:${level}}|${aspnet-User-Identity}|${aspnet-Request-IP}|${aspnet-Request-Method}|${aspnet-Request-Url}|${aspnet-Request-QueryString}|${aspnet-Request-UserAgent}|${aspnet-Request-Referrer}|${message}|${aspnet-traceidentifier}" />

		<!-- write logs to file -->
		<target xsi:type="File" name="warningfile" fileName="${logDirectory}\${level}\nlog-${shortdate}.log"
						header="Date Time|Level|Username|Request IP|Request Method|URL|QueryString|UserAgent|traceidentifier ¦ logger|message ¦ exception"
						layout="${longdate}|${uppercase:${level}}|${aspnet-User-Identity}|${aspnet-Request-IP}|${aspnet-Request-Method}|${aspnet-Request-Url}|${aspnet-Request-QueryString}|${aspnet-Request-UserAgent}|${aspnet-traceidentifier}${newline}${logger}|${message}${newline}${exception:format=tostring,Data:maxInnerExceptionLevel=10}" />

    <target xsi:type="Mail"
            name="email"
            smtpServer="SMTP.SOMESERVER.EDU"
            html="true"
            addNewLines="true"
            replaceNewlineWithBrTagInHtml="true"
            subject="Exception occured: ${machinename} ${date}"
            to="RECEIVER@SOME_EMAIL.edu"
            from="SENDER@SOME_EMAIL.edu"
            body="&lt;b&gt;User Info:&lt;/b&gt;${newline}
                  Severity: ${uppercase:${level}}${newline}
                  User Identity: ${aspnet-User-Identity} ${newline}
                  Client IP: ${aspnet-Request-IP}${newline}
									Method: ${aspnet-Request-Method}
                  Url: ${aspnet-Request-Url}${newline}
									QueryString: ${aspnet-Request-QueryString}
                  Referrer: ${aspnet-Request-Referrer}${newline}
                  UserAgent: ${aspnet-Request-UserAgent}${newline}${newline}
                  &lt;b&gt;Exception:&lt;/b&gt;${newline}
                  Message: ${message}${newline}
                  Source: ${logger}${newline}
                  Stack: ${exception:format=tostring,Data:maxInnerExceptionLevel=10}"
      />
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!-- Log all -->
		<!--<logger name="*" level="Info" writeTo="allfile" />-->
		<!-- MVC actions (all requests) -->
		<logger name="Microsoft.AspNetCore.Hosting.Internal.WebHost" level="Info" writeTo="allfile">
			<filters>
				<!-- Don't do request logging on the developers systems -->
				<when condition="'${environment:ASPNETCORE_ENVIRONMENT}' == 'Development'" action="Ignore" />
				<!-- Log MVC action requests -->
				<when condition="length('${aspnet-MVC-Action}') > 0" action="Log" />
				<!-- Ignore all other microsoft logging -->
				<when condition="starts-with(logger, 'Microsoft')" action="Ignore" />
			</filters>
		</logger>
		
    <logger name="*" minlevel="Warn" writeTo="warningfile" />
    <logger name="*" minlevel="Warn" writeTo="email">
      <filters>
        <when condition="'${environment:ASPNETCORE_ENVIRONMENT}' == 'Development'" action="Ignore" />
      </filters>
    </logger>
	</rules>
</nlog>